plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
//	id 'com.palantir.docker' version '0.35.0'
//	id 'com.palantir.docker-run' version '0.35.0'
}

group = 'com.tutorial'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

targetCompatibility = '17'
def dockerOwner = 'toddhayes'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql:42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-data'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.flywaydb:flyway-core:10.7.1'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.7.1'
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

if (hasProperty('buildScan')) {
	buildScan {
		termsOfServiceUrl = 'https://gradle.com/terms-of-service'
		termsOfServiceAgree = 'yes'
	}
}